.home-hero {
  position: relative;
  height: 95vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-image: url("../img/background/bg2.jpg");
  background-size: cover;
  background-position: center;
}

.home-hero__content {
  text-align: center;
}

.heading-primary {
  font-size: 4rem;
  margin-bottom: 2rem;
  color: #000000;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

.text-primary {
  font-size: 1.4rem;
  margin-bottom: 3rem;
  color: #000000;
  padding: 0px 18.75rem; /* Updated to use rem units */
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

.btn--bg {
  background-color: #000;
  color: #fff;
  padding: 1.5rem 2rem;
  border: none;
  border-radius: 2rem;
  font-size: 1.6rem;
  text-transform: uppercase;
  cursor: pointer;
}

.home-hero__socials {
  position: absolute;
  bottom: 3rem;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
}

.home-hero__social {
  margin-right: 2rem;
}

.home-hero__social:last-child {
  margin-right: 0;
}

.home-hero__social-icon {
  width: 3.5rem;
  height: 3.5rem;
}

.home-hero__mouse-scroll-cont {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1;
}

.mouse {
  width: 1.5rem;
  height: 2.6rem;
  border: 0.1875rem solid #000; /* Updated to use rem units */
  border-radius: 1rem;
  position: relative;
  display: block;
  margin: auto;
}

.mouse:before {
  content: "";
  display: block;
  position: absolute;
  top: 0.5rem;
  left: 50%;
  transform: translateX(-50%);
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background-color: #000;
  animation: scroll 2s ease-in-out infinite;
}

@keyframes scroll {
  0% {
    transform: translate(-50%, 0.3125rem); /* Updated to use rem units */
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translate(-50%, 1.25rem); /* Updated to use rem units */
    opacity: 0;
  }
}

button,
button::after {
  padding: 1rem 1.25rem; /* Updated to use rem units */
  font-size: 1.125rem; /* Updated to use rem units */
  background: linear-gradient(45deg, transparent 0.3125rem, #ff013c 0.3125rem); /* Updated to use rem units */
  border: 0;
  color: #fff;
  letter-spacing: 0.1875rem; /* Updated to use rem units */
  line-height: 1;
  box-shadow: 0.375rem 0px 0px #00e6f6; /* Updated to use rem units */
  outline: transparent;
  position: relative;
}

button::after {
  --slice-0: inset(50% 50% 50% 50%);
  --slice-1: inset(80% -0.375rem 0 0); /* Updated to use rem units */
  --slice-2: inset(50% -0.375rem 1.875rem 0); /* Updated to use rem units */
  --slice-3: inset(10% -0.375rem 5.625rem 0); /* Updated to use rem units */
  --slice-4: inset(40% -0.375rem 2.625rem 0); /* Updated to use rem units */
  --slice-5: inset(80% -0.375rem 0.3125rem 0); /* Updated to use rem units */
  content: "HOVER ME";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent 0.1875rem, #00e6f6 0.1875rem, #00e6f6 0.3125rem, #ff013c 0.3125rem); /* Updated to use rem units */
  text-shadow: -0.1875rem -0.1875rem 0px #f8f005, 0.1875rem 0.1875rem 0px #00e6f6; /* Updated to use rem units */
  clip-path: var(--slice-0);
}

button:hover::after {
  animation: 1s glitch;
  animation-timing-function: steps(2, end);
}

@keyframes glitch {
  0% {
    clip-path: var(--slice-1);
    transform: translate(-0.625rem, -0.3125rem); /* Updated to use rem units */
  }

  10% {
    clip-path: var(--slice-3);
    transform: translate(0.3125rem, 0.3125rem); /* Updated to use rem units */
  }

  20% {
    clip-path: var(--slice-1);
    transform: translate(-0.3125rem, 0.3125rem); /* Updated to use rem units */
  }

  30% {
    clip-path: var(--slice-3);
    transform: translate(0, 0.15625rem); /* Updated to use rem units */
  }

  40% {
    clip-path: var(--slice-2);
    transform: translate(-0.15625rem, 0); /* Updated to use rem units */
  }

  50% {
    clip-path: var(--slice-3);
    transform: translate(0.15625rem, 0); /* Updated to use rem units */
  }

  60% {
    clip-path: var(--slice-4);
    transform: translate(0.15625rem, 0.3125rem); /* Updated to use rem units */
  }

  70% {
    clip-path: var(--slice-2);
    transform: translate(-0.3125rem, 0.3125rem); /* Updated to use rem units */
  }

  80% {
    clip-path: var(--slice-5);
    transform: translate(0.625rem, -0.3125rem); /* Updated to use rem units */
  }

  90% {
    clip-path: var(--slice-1);
    transform: translate(-0.3125rem, 0); /* Updated to use rem units */
  }

  100% {
    clip-path: var(--slice-1);
    transform: translate(0);
  }
}
